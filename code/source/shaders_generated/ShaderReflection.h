// Generated by GLSLToC. Do no modify.

#pragma once

enum class ShaderStageType : unsigned char
{
	VERTEX,
	TESS_CONTROL,
	TESS_EVAL,
	GEOMETRY,
	FRAGMENT,
	COMPUTE
};

//enum class GLSLBasicType : unsigned char
//{
//	BOOL,
//	INT,
//	FLOAT,
//	SAMPLER_2D,
//	SAMPLER_3D,
//	ARRAY,
//	STRUCT
//};

struct ShaderUniformBlock
{
	unsigned short binding;
	unsigned short sizeBytes;
};

//struct GLSLType
//{
//	GLSLBasicType basicType;
//	union
//	{
//		struct // mtx/vector/scalar
//		{
//			unsigned char rows : 4;
//			unsigned char cols : 4;
//		};
//		unsigned char elements; // array
//		unsigned char fields;   // struct
//	};
//};

struct ShaderModule
{
	const char* const name;
	const char* const entryPoint;
	const unsigned* const progam;
	const char* const* const uboNames;
	const ShaderUniformBlock* const ubos;
	//const char* const* const uniformNames;
	//const GLSLType* const uniforms;
	//const char* const* const inputNames;
	//GLSLType* const inputs;
	//const char* const* const outputNames;
	//GLSLType* const outputs;
	const unsigned programSizeDWords;
	ShaderStageType type;
	unsigned char uboCount;
	unsigned char inputCount;
	unsigned char outputCount;
};